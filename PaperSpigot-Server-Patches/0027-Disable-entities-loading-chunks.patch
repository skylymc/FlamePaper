From 42afdfd2301d53e7913781c67f4b6886f1d00c5d Mon Sep 17 00:00:00 2001
From: LinsaFTW <25271111+linsaftw@users.noreply.github.com>
Date: Tue, 15 Mar 2022 10:57:28 -0300
Subject: [PATCH] Disable entities loading chunks


diff --git a/src/main/java/net/minecraft/server/ChunkProviderServer.java b/src/main/java/net/minecraft/server/ChunkProviderServer.java
index a0dd029c4..550960f53 100644
--- a/src/main/java/net/minecraft/server/ChunkProviderServer.java
+++ b/src/main/java/net/minecraft/server/ChunkProviderServer.java
@@ -62,17 +62,6 @@ public class ChunkProviderServer implements IChunkProvider {
             return;
         }
         // PaperSpigot end
-        // PaperSpigot start - Don't unload chunk if it contains an entity that loads chunks
-        if (chunk != null) {
-            for (List<Entity> entities : chunk.entitySlices) {
-                for (Entity entity : entities) {
-                    if (entity.loadChunks) {
-                        return;
-                    }
-                }
-            }
-        }
-        // PaperSpigot end
         if (this.world.worldProvider.e()) {
             if (!this.world.c(i, j)) {
                 // CraftBukkit start
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 0a83a816c..5971e4375 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -130,7 +130,6 @@ public abstract class Entity implements ICommandListener {
     public org.bukkit.projectiles.ProjectileSource projectileSource; // CraftBukkit - For projectiles only
     public boolean forceExplosionKnockback; // CraftBukkit - SPIGOT-949
     public boolean inUnloadedChunk = false; // PaperSpigot - Remove entities in unloaded chunks
-    public boolean loadChunks = false; // PaperSpigot - Entities can load chunks they move through and keep them loaded
 
     // Spigot start
     public Timing tickTimer = SpigotTimings.getEntityTimings(this); // Spigot
@@ -431,7 +430,6 @@ public abstract class Entity implements ICommandListener {
 
 
     public void move(double d0, double d1, double d2) {
-        if (this.loadChunks) loadChunks(); // PaperSpigot - Load chunks
         // FlamePaper start - Disable Unloaded Chunk Movement
         if (!((ChunkProviderServer) world.chunkProvider).isChunkLoaded((int) locX >> 4, (int) locZ >> 4)) {
             this.a(this.getBoundingBox().c(d0, d1, d2));
diff --git a/src/main/java/net/minecraft/server/EntityEnderPearl.java b/src/main/java/net/minecraft/server/EntityEnderPearl.java
index 2c94ae15b..4817e187e 100644
--- a/src/main/java/net/minecraft/server/EntityEnderPearl.java
+++ b/src/main/java/net/minecraft/server/EntityEnderPearl.java
@@ -16,13 +16,11 @@ public class EntityEnderPearl extends EntityProjectile {
 
     public EntityEnderPearl(World world) {
         super(world);
-        this.loadChunks = world.paperSpigotConfig.loadUnloadedEnderPearls; // PaperSpigot
     }
 
     public EntityEnderPearl(World world, EntityLiving entityliving) {
         super(world, entityliving);
         this.c = entityliving;
-        this.loadChunks = world.paperSpigotConfig.loadUnloadedEnderPearls; // PaperSpigot
     }
 
     protected void a(MovingObjectPosition movingobjectposition) {
diff --git a/src/main/java/net/minecraft/server/EntityFallingBlock.java b/src/main/java/net/minecraft/server/EntityFallingBlock.java
index 36c384eb9..724948be7 100644
--- a/src/main/java/net/minecraft/server/EntityFallingBlock.java
+++ b/src/main/java/net/minecraft/server/EntityFallingBlock.java
@@ -26,7 +26,6 @@ public class EntityFallingBlock extends Entity {
     public EntityFallingBlock(org.bukkit.Location loc, World world) {
         super(world);
         sourceLoc = loc;
-        this.loadChunks = world.paperSpigotConfig.loadUnloadedFallingBlocks; // PaperSpigot
     }
 
     public EntityFallingBlock(World world, double d0, double d1, double d2, IBlockData iblockdata) {
@@ -47,7 +46,6 @@ public class EntityFallingBlock extends Entity {
         this.lastX = d0;
         this.lastY = d1;
         this.lastZ = d2;
-        this.loadChunks = world.paperSpigotConfig.loadUnloadedFallingBlocks; // PaperSpigot
     }
 
     protected boolean s_() {
diff --git a/src/main/java/net/minecraft/server/EntityTNTPrimed.java b/src/main/java/net/minecraft/server/EntityTNTPrimed.java
index 872d9659c..567739da3 100644
--- a/src/main/java/net/minecraft/server/EntityTNTPrimed.java
+++ b/src/main/java/net/minecraft/server/EntityTNTPrimed.java
@@ -21,7 +21,6 @@ public class EntityTNTPrimed extends Entity {
     // PaperSpigot end
         this.k = true;
         this.setSize(0.98F, 0.98F);
-        this.loadChunks = world.paperSpigotConfig.loadUnloadedTNTEntities; // PaperSpigot
     }
 
     public EntityTNTPrimed(org.bukkit.Location loc, World world, double d0, double d1, double d2, EntityLiving entityliving) {
@@ -99,14 +98,6 @@ public class EntityTNTPrimed extends Entity {
         // CraftBukkit start
         // float f = 4.0F;
 
-        // PaperSpigot start - Force load chunks during TNT explosions
-        ChunkProviderServer chunkProviderServer = ((ChunkProviderServer) world.chunkProvider);
-        boolean forceChunkLoad = chunkProviderServer.forceChunkLoad;
-        if (world.paperSpigotConfig.loadUnloadedTNTEntities) {
-            chunkProviderServer.forceChunkLoad = true;
-        }
-        // PaperSpigot end
-
         org.bukkit.craftbukkit.CraftServer server = this.world.getServer();
 
         ExplosionPrimeEvent event = new ExplosionPrimeEvent((org.bukkit.entity.Explosive) org.bukkit.craftbukkit.entity.CraftEntity.getEntity(server, this));
@@ -116,12 +107,6 @@ public class EntityTNTPrimed extends Entity {
             this.world.createExplosion(this, this.locX, this.locY + (double) (this.length / 2.0F), this.locZ, event.getRadius(), event.getFire(), true);
         }
         // CraftBukkit end
-
-        // PaperSpigot start - Force load chunks during TNT explosions
-        if (world.paperSpigotConfig.loadUnloadedTNTEntities) {
-            chunkProviderServer.forceChunkLoad = forceChunkLoad;
-        }
-        // PaperSpigot end
     }
 
     protected void b(NBTTagCompound nbttagcompound) {
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 11a0c9109..ec2d1c417 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1179,14 +1179,8 @@ public abstract class World implements IBlockAccess {
                 Chunk chunk = this.getChunkIfLoaded( chunkx, chunkz );
                 if ( chunk == null )
                 {
-                    // PaperSpigot start
-                    if (entity.loadChunks) {
-                        chunk = ((ChunkProviderServer) entity.world.chunkProvider).getChunkAt(chunkx, chunkz);
-                    } else {
-                        entity.inUnloadedChunk = true; // PaperSpigot - Remove entities in unloaded chunks
-                        continue;
-                    }
-                    // PaperSpigot end
+                    entity.inUnloadedChunk = true; // PaperSpigot - Remove entities in unloaded chunks
+                    continue;
                 }
                 int cz = chunkz << 4;
                 // Compute ranges within chunk
@@ -1683,7 +1677,6 @@ public abstract class World implements IBlockAccess {
             int i1 = MathHelper.floor(entity.locZ / 16.0D);
 
             if (!entity.ad || entity.ae != k || entity.af != l || entity.ag != i1) {
-                if (entity.loadChunks) entity.loadChunks(); // PaperSpigot - Force load chunks
                 if (entity.ad && this.isChunkLoaded(entity.ae, entity.ag, true)) {
                     this.getChunkAt(entity.ae, entity.ag).a(entity, entity.af);
                 }
diff --git a/src/main/java/org/github/paperspigot/PaperSpigotWorldConfig.java b/src/main/java/org/github/paperspigot/PaperSpigotWorldConfig.java
index 67e56df01..f860492cf 100644
--- a/src/main/java/org/github/paperspigot/PaperSpigotWorldConfig.java
+++ b/src/main/java/org/github/paperspigot/PaperSpigotWorldConfig.java
@@ -230,16 +230,6 @@ public class PaperSpigotWorldConfig
         disableEndCredits = getBoolean( "game-mechanics.disable-end-credits", false );
     }
 
-    public boolean loadUnloadedEnderPearls;
-    public boolean loadUnloadedTNTEntities;
-    public boolean loadUnloadedFallingBlocks;
-    private void loadUnloaded()
-    {
-        loadUnloadedEnderPearls = getBoolean( "load-chunks.enderpearls", false );
-        loadUnloadedTNTEntities = getBoolean( "load-chunks.tnt-entities", false );
-        loadUnloadedFallingBlocks = getBoolean( "load-chunks.falling-blocks", false );
-    }
-
     public boolean generateCanyon;
     public boolean generateCaves;
     public boolean generateDungeon;
diff --git a/src/main/java/org/spigotmc/ActivationRange.java b/src/main/java/org/spigotmc/ActivationRange.java
index d3767d2a8..c3b16c94b 100644
--- a/src/main/java/org/spigotmc/ActivationRange.java
+++ b/src/main/java/org/spigotmc/ActivationRange.java
@@ -252,7 +252,7 @@ public class ActivationRange
     {
         SpigotTimings.checkIfActiveTimer.startTiming();
         // Never safe to skip fireworks or entities not yet added to chunk
-        if ( !entity.isAddedToChunk() || entity instanceof EntityFireworks || entity.loadChunks ) { // PaperSpigot
+        if ( !entity.isAddedToChunk() || entity instanceof EntityFireworks ) {
             SpigotTimings.checkIfActiveTimer.stopTiming();
             return true;
         }
-- 
2.37.3.windows.1

