From d3178474470dfd72897c22c73fb2620da31f4a80 Mon Sep 17 00:00:00 2001
From: Noksio <noksiopro@gmail.com>
Date: Sat, 29 Jun 2019 21:27:50 -0400
Subject: [PATCH] Fix PlayerMoveEvent


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 01500971..f283fa02 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -194,7 +197,8 @@ public class PlayerConnection implements PacketPlayInListener {
         WorldServer worldserver = this.minecraftServer.getWorldServer(this.player.dimension);
 
         this.g = true;
-        if (!this.player.viewingCredits) {
+        //if (!this.player.viewingCredits) {
+        if (!this.player.viewingCredits && !this.player.dead) { // CraftBukkit - Added ' && !this.player.dead'
             double d0;
 
             if (!this.checkMovement) {
@@ -207,8 +211,7 @@ public class PlayerConnection implements PacketPlayInListener {
             // CraftBukkit start - fire PlayerMoveEvent
             Player player = this.getPlayer();
             // Spigot Start
-            if ( !hasMoved )
-            {
+            if (!hasMoved) {
                 Location curPos = player.getLocation();
                 lastPosX = curPos.getX();
                 lastPosY = curPos.getY();
@@ -233,48 +237,51 @@ public class PlayerConnection implements PacketPlayInListener {
                 to.setYaw(packetplayinflying.yaw);
                 to.setPitch(packetplayinflying.pitch);
             }
+            
+            //if (this.checkMovement && !this.player.dead) {
+            	// Prevent 40 event-calls for less than a single pixel of movement >.>
+                double delta = Math.pow(this.lastPosX - to.getX(), 2) + Math.pow(this.lastPosY - to.getY(), 2) + Math.pow(this.lastPosZ - to.getZ(), 2);
+                float deltaAngle = Math.abs(this.lastYaw - to.getYaw()) + Math.abs(this.lastPitch - to.getPitch());
+                
+            	if (deltaAngle > 10f) {
+                	this.lastYaw = to.getYaw();
+                    this.lastPitch = to.getPitch();
+                    // TODO: PlayerHeadRotationEvent
+                }
+                if (delta > 1f / 256) {
+                    this.lastPosX = to.getX();
+                    this.lastPosY = to.getY();
+                    this.lastPosZ = to.getZ();
+
+                    // Skip the first time we do this
+                    if (true) { // Spigot - don't skip any move events
+                        Location oldTo = to.clone(); // PaperSpigot
+                        PlayerMoveEvent event = new PlayerMoveEvent(player, from, to);
+                        this.server.getPluginManager().callEvent(event);
+
+                        // If the event is cancelled we move the player back to their old location.
+                        if (event.isCancelled()) {
+                            //this.player.playerConnection.sendPacket(new PacketPlayOutPosition(from.getX(), from.getY() + 1.6200000047683716D, from.getZ(), from.getYaw(), from.getPitch(), false));
+                            teleport(from);
+                        	return;
+                        }
 
-            // Prevent 40 event-calls for less than a single pixel of movement >.>
-            double delta = Math.pow(this.lastPosX - to.getX(), 2) + Math.pow(this.lastPosY - to.getY(), 2) + Math.pow(this.lastPosZ - to.getZ(), 2);
-            float deltaAngle = Math.abs(this.lastYaw - to.getYaw()) + Math.abs(this.lastPitch - to.getPitch());
-
-            if ((delta > 1f / 256 || deltaAngle > 10f) && (this.checkMovement && !this.player.dead)) {
-                this.lastPosX = to.getX();
-                this.lastPosY = to.getY();
-                this.lastPosZ = to.getZ();
-                this.lastYaw = to.getYaw();
-                this.lastPitch = to.getPitch();
-
-                // Skip the first time we do this
-                if (true) { // Spigot - don't skip any move events
-                    Location oldTo = to.clone(); // PaperSpigot
-                    PlayerMoveEvent event = new PlayerMoveEvent(player, from, to);
-                    this.server.getPluginManager().callEvent(event);
-
-                    // If the event is cancelled we move the player back to their old location.
-                    if (event.isCancelled()) {
-                        this.player.playerConnection.sendPacket(new PacketPlayOutPosition(from.getX(), from.getY() + 1.6200000047683716D, from.getZ(), from.getYaw(), from.getPitch(), false));
-                        return;
-                    }
-
-                    /* If a Plugin has changed the To destination then we teleport the Player
-                    there to avoid any 'Moved wrongly' or 'Moved too quickly' errors.
-                    We only do this if the Event was not cancelled. */
-                    if (!oldTo.equals(event.getTo()) && !event.isCancelled()) { // PaperSpigot
-                        this.player.getBukkitEntity().teleport(event.getTo(), PlayerTeleportEvent.TeleportCause.UNKNOWN);
-                        return;
-                    }
+                        /* If a Plugin has changed the To destination then we teleport the Player
+                        there to avoid any 'Moved wrongly' or 'Moved too quickly' errors.
+                        We only do this if the Event was not cancelled. */
+                        if (!oldTo.equals(event.getTo()) && !event.isCancelled()) { // PaperSpigot
+                            this.player.getBukkitEntity().teleport(event.getTo(), PlayerTeleportEvent.TeleportCause.UNKNOWN);
+                            return;
+                        }
 
-                    /* Check to see if the Players Location has some how changed during the call of the event.
-                    This can happen due to a plugin teleporting the player instead of using .setTo() */
-                    if (!from.equals(this.getPlayer().getLocation()) && this.justTeleported) {
-                        this.justTeleported = false;
-                        return;
+                        /* Check to see if the Players Location has some how changed during the call of the event.
+                        This can happen due to a plugin teleporting the player instead of using .setTo() */
+                        if (!from.equals(this.getPlayer().getLocation()) && this.justTeleported) {
+                            this.justTeleported = false;
+                            return;
+                        }
                     }
                 }
-            }
-
-            if (this.checkMovement && !this.player.dead) {
                 // CraftBukkit end
                 double d1;
                 double d2;
